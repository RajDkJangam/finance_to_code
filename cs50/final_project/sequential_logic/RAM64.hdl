// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    RAM8(address=address[0..2], in=in, out=o1, load=l1);
    RAM8(address=address[0..2], in=in, out=o2, load=l2);
    RAM8(address=address[0..2], in=in, out=o3, load=l3);
    RAM8(address=address[0..2], in=in, out=o4, load=l4);
    RAM8(address=address[0..2], in=in, out=o5, load=l5);
    RAM8(address=address[0..2], in=in, out=o6, load=l6);
    RAM8(address=address[0..2], in=in, out=o7, load=l7);
    RAM8(address=address[0..2], in=in, out=o8, load=l8);

    // passes the load value to all of the RAM8 chips
    DMux8Way(sel=address[3..5], in=load, a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);

    // sends the selected RAM8 output to output of RAM64
    Mux8Way16(sel=address[3..5], a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, out=out);

}